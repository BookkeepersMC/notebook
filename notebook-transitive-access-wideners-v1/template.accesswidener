# Registering custom model predicate providers for item models
transitive-accessible method net/minecraft/client/item/ModelPredicateProviderRegistry register (Lnet/minecraft/item/Item;Lnet/minecraft/util/Identifier;Lnet/minecraft/client/item/UnclampedModelPredicateProvider;)V
transitive-accessible method net/minecraft/client/item/ModelPredicateProviderRegistry register (Lnet/minecraft/util/Identifier;Lnet/minecraft/client/item/UnclampedModelPredicateProvider;)Lnet/minecraft/client/item/UnclampedModelPredicateProvider;
transitive-accessible method net/minecraft/client/item/ModelPredicateProviderRegistry registerCustomModelData (Lnet/minecraft/client/item/ModelPredicateProvider;)V

# Registering custom advancement criteria
transitive-accessible method net/minecraft/advancement/criterion/Criteria register (Ljava/lang/String;Lnet/minecraft/advancement/criterion/CriterionTrigger;)Lnet/minecraft/advancement/criterion/CriterionTrigger;

# Creating custom screen handler types
transitive-accessible class net/minecraft/screen/ScreenHandlerType$Factory
transitive-accessible method net/minecraft/screen/ScreenHandlerType <init> (Lnet/minecraft/screen/ScreenHandlerType$Factory;Lnet/minecraft/feature_flags/FeatureFlagBitSet;)V

# Registering custom screen handler type -> screen mappings
transitive-accessible class net/minecraft/client/gui/screen/ingame/HandledScreens$Provider
transitive-accessible method net/minecraft/client/gui/screen/ingame/HandledScreens register (Lnet/minecraft/screen/ScreenHandlerType;Lnet/minecraft/client/gui/screen/ingame/HandledScreens$Provider;)V

# Data contained in loot tables and pools
transitive-accessible field net/minecraft/loot/LootPool entries Ljava/util/List;
transitive-accessible field net/minecraft/loot/LootPool conditions Ljava/util/List;
transitive-accessible field net/minecraft/loot/LootPool functions Ljava/util/List;
transitive-accessible field net/minecraft/loot/LootPool rolls Lnet/minecraft/loot/provider/number/LootNumberProvider;
transitive-accessible field net/minecraft/loot/LootPool bonusRolls Lnet/minecraft/loot/provider/number/LootNumberProvider;

# Villager trade factories
transitive-accessible class net/minecraft/village/TradeOffers$VillagerTypeSpecificFactory
transitive-accessible class net/minecraft/village/TradeOffers$EnchantBookFactory
transitive-accessible class net/minecraft/village/TradeOffers$BuyForOneEmeraldFactory
transitive-accessible class net/minecraft/village/TradeOffers$SellItemFactory
transitive-accessible class net/minecraft/village/TradeOffers$SuspiciousStewForEmeraldFactory
transitive-accessible class net/minecraft/village/TradeOffers$ProcessItemFactory
transitive-accessible class net/minecraft/village/TradeOffers$SellEnchantedToolFactory
transitive-accessible class net/minecraft/village/TradeOffers$TypeAwareBuyForOneEmeraldFactory
transitive-accessible class net/minecraft/village/TradeOffers$SellPotionHoldingItemFactory
transitive-accessible class net/minecraft/village/TradeOffers$SellMapFactory
transitive-accessible class net/minecraft/village/TradeOffers$SellDyedArmorFactory

# Registering custom entity spawn restrictions
transitive-accessible method net/minecraft/entity/SpawnRestriction register (Lnet/minecraft/entity/EntityType;Lnet/minecraft/entity/SpawnLocation;Lnet/minecraft/world/Heightmap$Type;Lnet/minecraft/entity/SpawnRestriction$SpawnPredicate;)V

# Item usage context constructors
transitive-accessible method net/minecraft/item/ItemUsageContext <init> (Lnet/minecraft/world/World;Lnet/minecraft/entity/player/PlayerEntity;Lnet/minecraft/util/Hand;Lnet/minecraft/item/ItemStack;Lnet/minecraft/util/hit/BlockHitResult;)V
transitive-accessible method net/minecraft/item/ItemPlacementContext <init> (Lnet/minecraft/world/World;Lnet/minecraft/entity/player/PlayerEntity;Lnet/minecraft/util/Hand;Lnet/minecraft/item/ItemStack;Lnet/minecraft/util/hit/BlockHitResult;)V

# Registering custom scoreboard criteria
transitive-accessible method net/minecraft/scoreboard/ScoreboardCriterion create (Ljava/lang/String;ZLnet/minecraft/scoreboard/ScoreboardCriterion$RenderType;)Lnet/minecraft/scoreboard/ScoreboardCriterion;
transitive-accessible method net/minecraft/scoreboard/ScoreboardCriterion create (Ljava/lang/String;)Lnet/minecraft/scoreboard/ScoreboardCriterion;

# Model part subclasses
transitive-accessible class net/minecraft/client/model/ModelPart$Vertex
transitive-accessible class net/minecraft/client/model/ModelPart$Quad

# Creating custom render layers
transitive-accessible method net/minecraft/client/render/RenderLayer of (Lnet/minecraft/client/render/RenderPhase$Shader;)Lnet/minecraft/client/render/RenderLayer$MultiPhaseParameters;
transitive-accessible method net/minecraft/client/render/RenderLayer of (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$DrawMode;IZZLnet/minecraft/client/render/RenderLayer$MultiPhaseParameters;)Lnet/minecraft/client/render/RenderLayer$MultiPhase;
transitive-accessible method net/minecraft/client/render/RenderLayer of (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$DrawMode;ILnet/minecraft/client/render/RenderLayer$MultiPhaseParameters;)Lnet/minecraft/client/render/RenderLayer$MultiPhase;
transitive-accessible class net/minecraft/client/render/RenderLayer$MultiPhase
transitive-accessible class net/minecraft/client/render/RenderLayer$MultiPhaseParameters
transitive-accessible class net/minecraft/client/render/RenderLayer$OutlineMode

# Registering custom block entity renderers
transitive-accessible method net/minecraft/client/render/block/entity/BlockEntityRendererFactories register (Lnet/minecraft/block/entity/BlockEntityType;Lnet/minecraft/client/render/block/entity/BlockEntityRendererFactory;)V

# Creating custom sensor types
transitive-accessible method net/minecraft/entity/ai/brain/sensor/SensorType <init> (Ljava/util/function/Supplier;)V

# Creating custom activities
transitive-accessible method net/minecraft/entity/ai/brain/Activity <init> (Ljava/lang/String;)V

# Living entity methods
transitive-accessible method net/minecraft/entity/LivingEntity damageArmor (Lnet/minecraft/entity/damage/DamageSource;F)V
transitive-accessible method net/minecraft/entity/LivingEntity damageHelmet (Lnet/minecraft/entity/damage/DamageSource;F)V
transitive-accessible method net/minecraft/entity/LivingEntity damageShield (F)V

# Entity constructors
transitive-accessible method net/minecraft/entity/projectile/ProjectileEntity <init> (Lnet/minecraft/entity/EntityType;Lnet/minecraft/world/World;)V
transitive-accessible method net/minecraft/entity/projectile/FishingBobberEntity <init> (Lnet/minecraft/entity/EntityType;Lnet/minecraft/world/World;II)V

# Miscellaneous other methods
transitive-accessible method net/minecraft/server/world/ServerWorld sendToPlayerIfNearby (Lnet/minecraft/server/network/ServerPlayerEntity;ZDDDLnet/minecraft/network/packet/Packet;)Z
transitive-accessible method net/minecraft/text/TextColor getHexCode ()Ljava/lang/String;
transitive-accessible method net/minecraft/text/component/TranslatableComponent getArgument (I)Lnet/minecraft/text/StringVisitable;

# Creating block entity types
transitive-extendable class net/minecraft/block/entity/BlockEntityType$BlockEntityFactory

# Villagers
transitive-accessible field net/minecraft/village/VillagerType BIOME_TO_TYPE Ljava/util/Map;
transitive-accessible method net/minecraft/village/VillagerType <init> (Ljava/lang/String;)V

# Access stack list in SimpleInventory
transitive-accessible field net/minecraft/inventory/SimpleInventory stacks Lnet/minecraft/util/collection/DefaultedList;

# Creating custom sound events
transitive-accessible method net/minecraft/sound/SoundEvent createFixedRangeEvent (Lnet/minecraft/util/Identifier;F)Lnet/minecraft/sound/SoundEvent;
transitive-accessible method net/minecraft/sound/SoundEvent createVariableRangeEvent (Lnet/minecraft/util/Identifier;)Lnet/minecraft/sound/SoundEvent;

# Creating BlockStateProviderTypes
transitive-accessible method net/minecraft/world/gen/stateprovider/BlockStateProviderType <init> (Lcom/mojang/serialization/MapCodec;)V

# Creating custom biomes
transitive-accessible method net/minecraft/world/biome/OverworldBiomeCreator getSkyColor (F)I

# Creating custom template pools
transitive-accessible field net/minecraft/structure/processor/StructureProcessorLists EMPTY Lnet/minecraft/registry/ResourceKey;

# Creating custom trees
transitive-accessible method net/minecraft/world/gen/foliage/FoliagePlacerType <init> (Lcom/mojang/serialization/MapCodec;)V
transitive-accessible method net/minecraft/world/gen/treedecorator/TreeDecoratorType <init> (Lcom/mojang/serialization/MapCodec;)V
transitive-accessible method net/minecraft/world/gen/trunk/TrunkPlacerType <init> (Lcom/mojang/serialization/MapCodec;)V
transitive-accessible method net/minecraft/world/gen/root/RootPlacerType <init> (Lcom/mojang/serialization/MapCodec;)V

# Working with custom damage sources
transitive-accessible field net/minecraft/entity/damage/DamageSources registry Lnet/minecraft/registry/Registry;
transitive-accessible method net/minecraft/entity/damage/DamageSources create (Lnet/minecraft/registry/ResourceKey;)Lnet/minecraft/entity/damage/DamageSource;
transitive-accessible method net/minecraft/entity/damage/DamageSources create (Lnet/minecraft/registry/ResourceKey;Lnet/minecraft/entity/Entity;)Lnet/minecraft/entity/damage/DamageSource;
transitive-accessible method net/minecraft/entity/damage/DamageSources create (Lnet/minecraft/registry/ResourceKey;Lnet/minecraft/entity/Entity;Lnet/minecraft/entity/Entity;)Lnet/minecraft/entity/damage/DamageSource;

# The attack cooldown
transitive-accessible field net/minecraft/client/Minecraft attackCooldown I

# Creating certain types of blocks
transitive-accessible method net/minecraft/block/Blocks createLogSettings (Lnet/minecraft/block/MapColor;Lnet/minecraft/block/MapColor;Lnet/minecraft/sound/BlockSoundGroup;)Lnet/minecraft/block/AbstractBlock$Settings;
transitive-accessible method net/minecraft/block/Blocks createNetherStemSettings (Lnet/minecraft/block/MapColor;)Lnet/minecraft/block/AbstractBlock$Settings;
transitive-accessible method net/minecraft/block/Blocks createLeavesSettings (Lnet/minecraft/sound/BlockSoundGroup;)Lnet/minecraft/block/AbstractBlock$Settings;
transitive-accessible method net/minecraft/block/Blocks createButtonSettings ()Lnet/minecraft/block/AbstractBlock$Settings;
transitive-accessible method net/minecraft/block/Blocks createFlowerPotSettings ()Lnet/minecraft/block/AbstractBlock$Settings;

# Methods used in block creation
transitive-accessible method net/minecraft/block/Blocks solid (Lnet/minecraft/block/BlockState;Lnet/minecraft/world/BlockView;Lnet/minecraft/util/math/BlockPos;)Z
transitive-accessible method net/minecraft/block/Blocks spawnable (Lnet/minecraft/block/BlockState;Lnet/minecraft/world/BlockView;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/entity/EntityType;)Ljava/lang/Boolean;
transitive-accessible method net/minecraft/block/Blocks allowOcelotsAndParrots (Lnet/minecraft/block/BlockState;Lnet/minecraft/world/BlockView;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/entity/EntityType;)Ljava/lang/Boolean;
transitive-accessible method net/minecraft/block/Blocks luminanceOf (I)Ljava/util/function/ToIntFunction;
transitive-accessible method net/minecraft/block/Blocks nonSolid (Lnet/minecraft/block/BlockState;Lnet/minecraft/world/BlockView;Lnet/minecraft/util/math/BlockPos;)Z
transitive-accessible method net/minecraft/block/Blocks nonSpawnable (Lnet/minecraft/block/BlockState;Lnet/minecraft/world/BlockView;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/entity/EntityType;)Ljava/lang/Boolean;

# Methods used in block registration
transitive-accessible method net/minecraft/block/Blocks register (Lnet/minecraft/registry/ResourceKey;Ljava/util/function/Function;Lnet/minecraft/block/AbstractBlock$Settings;)Lnet/minecraft/block/Block;
transitive-accessible method net/minecraft/block/Blocks register (Lnet/minecraft/registry/ResourceKey;Lnet/minecraft/block/AbstractBlock$Settings;)Lnet/minecraft/block/Block;

### Generated access wideners below
